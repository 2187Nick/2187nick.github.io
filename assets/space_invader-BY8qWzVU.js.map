{"version":3,"file":"space_invader-BY8qWzVU.js","sources":["../../src/assets/Mario 1 - Mario Riff.mp3","../../src/assets/fireball.mp3","../../src/assets/Break_Brick.mp3","../../src/assets/game-win.mp3","../../src/assets/die.mp3","../../src/hooks/useLeaderboard.js","../../src/components/leaderboard/ScoreSubmission.jsx","../../src/components/leaderboard/LeaderboardComponent.jsx","../../src/components/leaderboard/GameOverModal.jsx","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["export default \"__VITE_ASSET__Bbu1_C86__\"","export default \"__VITE_ASSET__Ch3XLZO9__\"","export default \"__VITE_ASSET__Dxf$msHc__\"","export default \"__VITE_ASSET__DKcKhp$u__\"","export default \"__VITE_ASSET__Cxh2R69g__\"","import { useState, useEffect } from \"react\";\n\nexport const useLeaderboard = () => {\n  const [scores, setScores] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchLeaderboard = async () => {\n    try {\n      console.log(\"Fetching leaderboard data...\");\n      setLoading(true);\n      const response = await fetch(\n        \"https://raw.githubusercontent.com/2187Nick/2187Nick.github.io/main/leaderboard/scores.json\",\n        { cache: \"no-store\" }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch leaderboard data\");\n      }\n\n      const data = await response.json();\n      setScores(data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching leaderboard:\", err);\n      setError(\"Failed to load leaderboard. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchLeaderboard();\n  }, []);\n\n  const isHighScore = (newScore) => {\n    console.log(\"Checking if score is high enough:\", newScore, \"Current scores:\", scores);\n    \n    // Always treat 0 or negative scores as not high enough\n    if (newScore <= 0) {\n      console.log(\"Score is 0 or negative, not high enough\");\n      return false;\n    }\n    \n    // Check if the score is higher than any of the current top 3\n    if (scores.length < 3) {\n      console.log(\"Less than 3 scores in leaderboard, score is high enough\");\n      return true;\n    }\n    \n    // If we have 3 scores, check if the new score is higher than the lowest score\n    const lowestScore = Math.min(...scores.map(s => s.score));\n    console.log(\"Lowest score in leaderboard:\", lowestScore);\n    return newScore > lowestScore;\n  };\n\n  const submitScore = async (nickname, score) => {\n    try {\n      // DEPLOYMENT INSTRUCTIONS:\n      // 1. Deploy the Cloudflare Worker from api/worker.js\n      // 2. Replace the placeholder URL below with your deployed worker URL\n      const apiUrl = \"https://falling-thunder-fd3b.nick-80f.workers.dev/\";\n      \n      const response = await fetch(apiUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          nickname,\n          score,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Failed to submit score\");\n      }\n\n      // After successful submission, refresh the leaderboard\n      await fetchLeaderboard();\n      \n      return { success: true };\n    } catch (err) {\n      console.error(\"Error submitting score:\", err);\n      return { \n        success: false, \n        error: err.message || \"Failed to submit score. Please try again.\"\n      };\n    }\n  };\n\n  return { \n    scores, \n    loading, \n    error, \n    fetchLeaderboard,\n    isHighScore,\n    submitScore\n  };\n};\n","import React, { useState } from \"react\";\nimport { useLeaderboard } from \"../../hooks/useLeaderboard\";\n\nconst ScoreSubmission = ({ score, onClose, onSubmitSuccess }) => {\n  const [nickname, setNickname] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const { submitScore } = useLeaderboard();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!nickname.trim()) {\n      setError(\"Please enter a nickname\");\n      return;\n    }\n\n    setError(null);\n    setSubmitting(true);\n\n    try {\n      const result = await submitScore(nickname.trim(), score);\n      \n      if (!result.success) {\n        throw new Error(result.error || \"Failed to submit score\");\n      }\n\n      setSuccess(true);\n      \n      if (onSubmitSuccess) {\n        onSubmitSuccess(nickname.trim(), score);\n      }\n      \n      // Wait a moment before closing\n      setTimeout(() => {\n        onClose();\n      }, 2000);\n    } catch (err) {\n      console.error(\"Error submitting score:\", err);\n      setError(err.message || \"Failed to submit score. Please try again.\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  if (success) {\n    return (\n      <div style={{\n        backgroundColor: \"rgba(22, 163, 74, 0.2)\",\n        borderRadius: \"8px\",\n        padding: \"20px\",\n        textAlign: \"center\",\n        border: \"1px solid #22c55e\"\n      }}>\n        <h2 style={{ color: \"#4ade80\", marginBottom: \"16px\" }}>Score Submitted!</h2>\n        <p>Your score of <span style={{ fontWeight: \"bold\", color: \"#f59e0b\" }}>{score}</span> has been submitted as <span style={{ fontWeight: \"bold\" }}>{nickname}</span>.</p>\n        <p style={{ marginBottom: \"20px\" }}>The leaderboard will be updated shortly.</p>\n        <button \n          onClick={onClose}\n          style={{\n            padding: \"8px 16px\",\n            backgroundColor: \"#22c55e\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            fontWeight: \"bold\"\n          }}\n        >\n          Close\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{\n      backgroundColor: \"rgba(0, 0, 0, 0.9)\",\n      borderRadius: \"8px\",\n      padding: \"24px\",\n      border: \"1px solid #38bdf8\",\n      boxShadow: \"0 0 20px rgba(56, 189, 248, 0.2)\",\n      width: \"100%\",\n      maxWidth: \"400px\",\n      margin: \"0 auto\"\n    }}>\n      <h2 style={{ color: \"#38bdf8\", marginBottom: \"16px\", textAlign: \"center\" }}>Submit Your Score: {score}</h2>\n      \n      {error && (\n        <p style={{ \n          color: \"#ef4444\", \n          backgroundColor: \"rgba(239, 68, 68, 0.1)\", \n          padding: \"10px\", \n          borderRadius: \"4px\", \n          marginBottom: \"16px\" \n        }}>\n          {error}\n        </p>\n      )}\n      \n      <form onSubmit={handleSubmit}>\n        <div style={{ marginBottom: \"20px\" }}>\n          <label \n            htmlFor=\"nickname\" \n            style={{ \n              display: \"block\", \n              marginBottom: \"8px\", \n              fontWeight: \"bold\" \n            }}\n          >\n            Nickname:\n          </label>\n          <input\n            type=\"text\"\n            id=\"nickname\"\n            value={nickname}\n            onChange={(e) => setNickname(e.target.value)}\n            placeholder=\"Enter your nickname\"\n            maxLength={15}\n            disabled={submitting}\n            style={{\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #38bdf8\",\n              backgroundColor: \"rgba(56, 189, 248, 0.1)\",\n              color: \"white\",\n              outline: \"none\"\n            }}\n          />\n        </div>\n        \n        <div style={{ \n          display: \"flex\", \n          justifyContent: \"space-between\", \n          gap: \"12px\" \n        }}>\n          <button \n            type=\"submit\" \n            disabled={submitting}\n            style={{\n              flex: \"1\",\n              padding: \"10px\",\n              backgroundColor: submitting ? \"#6b7280\" : \"#3b82f6\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: submitting ? \"not-allowed\" : \"pointer\",\n              fontWeight: \"bold\"\n            }}\n          >\n            {submitting ? \"Submitting...\" : \"Submit Score\"}\n          </button>\n          \n          <button \n            type=\"button\" \n            onClick={onClose} \n            disabled={submitting}\n            style={{\n              flex: \"1\",\n              padding: \"10px\",\n              backgroundColor: \"#6b7280\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: submitting ? \"not-allowed\" : \"pointer\",\n              fontWeight: \"bold\"\n            }}\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ScoreSubmission;\n","import React from \"react\";\nimport { useLeaderboard } from \"../../hooks/useLeaderboard\";\n\nconst LeaderboardComponent = () => {\n  const { scores, loading, error, fetchLeaderboard } = useLeaderboard();\n\n  if (loading) {\n    return (\n      <div className=\"leaderboard\">\n        <h2>🏆 High Scores</h2>\n        <p>Loading scores...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"leaderboard\">\n        <h2>🏆 High Scores</h2>\n        <p className=\"error\">{error}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"leaderboard\" style={{ textAlign: \"center\" }}>\n      <h2 style={{ color: \"#38bdf8\", marginBottom: \"12px\" }}>🏆 High Scores</h2>\n      <table style={{ \n        width: \"100%\", \n        borderCollapse: \"collapse\", \n        marginTop: \"8px\",\n        color: \"white\"\n      }}>\n        <thead>\n          <tr style={{ borderBottom: \"2px solid #38bdf8\" }}>\n            <th style={{ padding: \"8px\", textAlign: \"center\" }}>Rank</th>\n            <th style={{ padding: \"8px\", textAlign: \"left\" }}>Player</th>\n            <th style={{ padding: \"8px\", textAlign: \"right\" }}>Score</th>\n          </tr>\n        </thead>\n        <tbody>\n          {scores.map((entry, index) => (\n            <tr \n              key={index} \n              style={{ \n                backgroundColor: index % 2 === 0 ? \"rgba(56, 189, 248, 0.1)\" : \"transparent\",\n                borderBottom: \"1px solid rgba(56, 189, 248, 0.3)\"\n              }}\n            >\n              <td style={{ padding: \"8px\", textAlign: \"center\" }}>\n                {index === 0 ? \"🥇\" : index === 1 ? \"🥈\" : index === 2 ? \"🥉\" : index + 1}\n              </td>\n              <td style={{ padding: \"8px\", textAlign: \"left\", fontWeight: \"bold\" }}>{entry.name}</td>\n              <td style={{ padding: \"8px\", textAlign: \"right\", color: \"#f59e0b\" }}>{entry.score}</td>\n            </tr>\n          ))}\n          {scores.length === 0 && (\n            <tr>\n              <td colSpan=\"3\" style={{ padding: \"16px\", textAlign: \"center\" }}>\n                No scores yet. Be the first!\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default LeaderboardComponent;\n","import React, { useState, useEffect } from \"react\";\nimport { useLeaderboard } from \"../../hooks/useLeaderboard\";\nimport ScoreSubmission from \"./ScoreSubmission\";\nimport LeaderboardComponent from \"./LeaderboardComponent\";\n\nconst GameOverModal = ({ score, onRestart, onClose, isWin }) => {\n  const [showSubmission, setShowSubmission] = useState(false);\n  const { isHighScore, fetchLeaderboard } = useLeaderboard();\n  const [isHighEnough, setIsHighEnough] = useState(false);\n  \n  useEffect(() => {\n\n    console.log(\"Now try and fetch leaderboard data\");\n    // Refresh leaderboard data when modal opens\n    fetchLeaderboard().then(() => {\n      // After refreshing, check if the score is high enough\n      const highEnough = isHighScore(score);\n      console.log(\"GameOverModal rendered - Score:\", score, \"IsWin:\", isWin, \"High enough:\", highEnough);\n      setIsHighEnough(highEnough);\n    });\n  }, [score, isHighScore, fetchLeaderboard]);\n\n  const handleSubmitSuccess = async () => {\n    console.log(\"Score submitted successfully, refreshing leaderboard\");\n    // Refresh leaderboard data after successful submission\n    await fetchLeaderboard();\n    setIsHighEnough(false); // Hide the submission button after submitting\n  };\n\n  if (showSubmission) {\n    return (\n      <div style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 9999\n      }}>\n        <div style={{\n          backgroundColor: 'rgba(0, 0, 0, 0.95)',\n          padding: '2rem',\n          borderRadius: '8px',\n          border: '5px solid #ff3800',\n          boxShadow: '0 0 30px rgba(255, 56, 0, 0.8)',\n          width: '90%',\n          maxWidth: '500px'\n        }}>\n          <ScoreSubmission \n            score={score}\n            onClose={() => setShowSubmission(false)}\n            onSubmitSuccess={handleSubmitSuccess}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 9999\n    }}>\n      <div style={{\n        backgroundColor: 'rgba(0, 0, 0, 0.95)',\n        padding: '2rem',\n        borderRadius: '8px',\n        border: '5px solid #ff3800',\n        boxShadow: '0 0 30px rgba(255, 56, 0, 0.8)',\n        color: 'white',\n        width: '90%',\n        maxWidth: '500px',\n        textAlign: 'center'\n      }}>\n        <h2 style={{ \n          color: isWin ? \"#4ade80\" : \"#ef4444\", \n          fontSize: \"24px\",\n          marginBottom: \"16px\" \n        }}>\n          {isWin ? \"You Win!\" : \"Game Over\"}\n        </h2>\n        \n        <p style={{ \n          fontSize: \"20px\", \n          marginBottom: \"24px\" \n        }}>\n          Your Score: <span style={{ color: \"#f59e0b\", fontWeight: \"bold\" }}>{score}</span>\n        </p>\n        \n        {isHighEnough && (\n          <div style={{ \n            marginBottom: \"24px\",\n            padding: \"12px\",\n            backgroundColor: \"rgba(79, 70, 229, 0.2)\",\n            borderRadius: \"6px\",\n            border: \"1px solid #6366f1\"\n          }}>\n            <p style={{ marginBottom: \"12px\", color: \"#c4b5fd\" }}>\n              🏆 Congratulations! You got a high score!\n            </p>\n            <button \n              onClick={() => setShowSubmission(true)}\n              style={{\n                padding: \"8px 16px\",\n                backgroundColor: \"#6366f1\",\n                border: \"none\",\n                borderRadius: \"4px\",\n                color: \"white\",\n                fontWeight: \"bold\",\n                cursor: \"pointer\"\n              }}\n            >\n              Submit Score\n            </button>\n          </div>\n        )}\n        \n        <div style={{ marginBottom: \"24px\" }}>\n          <LeaderboardComponent />\n        </div>\n        \n        <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"12px\" }}>\n          <button \n            onClick={onRestart}\n            style={{\n              padding: \"10px 20px\",\n              backgroundColor: \"#3b82f6\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              color: \"white\",\n              fontWeight: \"bold\",\n              cursor: \"pointer\"\n            }}\n          >\n            Play Again\n          </button>\n          <button \n            onClick={onClose}\n            style={{\n              padding: \"10px 20px\",\n              backgroundColor: \"#6b7280\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              color: \"white\",\n              fontWeight: \"bold\",\n              cursor: \"pointer\"\n            }}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameOverModal;\n","import { useEffect, useState, useCallback, useMemo, useRef } from \"react\";\nimport {\n  ReactFlow,\n  Background,\n  useNodesState,\n} from \"@xyflow/react\";\nimport \"@xyflow/react/dist/style.css\";\nimport { motion } from \"framer-motion\";\nimport startSound from \"./assets/Mario 1 - Mario Riff.mp3\";\nimport shoot from \"./assets/fireball.mp3\";\nimport explosion from \"./assets/Break_Brick.mp3\";\nimport gameWin from \"./assets/game-win.mp3\";\nimport gameOver from \"./assets/die.mp3\";\nimport GameOverModal from \"./components/leaderboard/GameOverModal\";\n\nconst Button = ({ style = {}, children, ...rest }) => (\n  <button\n    {...rest}\n    style={{ \n      padding: \"8px 12px\", \n      borderRadius: \"4px\", \n      backgroundColor: \"#404040\", \n      border: \"none\",\n      color: \"white\",\n      cursor: \"pointer\",\n      fontSize: \"14px\",\n      transition: \"background-color 0.2s, transform 0.2s\",\n      ...style\n    }}\n    onMouseOver={(e) => { e.currentTarget.style.backgroundColor = \"#525252\"; }}\n    onMouseOut={(e) => { e.currentTarget.style.backgroundColor = \"#404040\"; }}\n    onMouseDown={(e) => { e.currentTarget.style.transform = \"scale(0.95)\"; }}\n    onMouseUp={(e) => { e.currentTarget.style.transform = \"scale(1)\"; }}\n    onTouchStart={(e) => { e.currentTarget.style.transform = \"scale(0.95)\"; }}\n    onTouchEnd={(e) => { e.currentTarget.style.transform = \"scale(1)\"; }}\n  >\n    {children}\n  </button>\n);\n\n/* ------------------------------ constants ------------------------------ */\nconst SOUNDS = {\n  shoot: shoot,\n  explosion: explosion,\n  gameStart: startSound,\n  gameOver: gameOver,\n  gameWin: gameWin,\n};\n\nconst loadSound = (url) => {\n  const audio = new Audio(url);\n  audio.load();\n  return audio;\n};\n\nconst getGameDimensions = () => {\n  const isMobile = window.innerWidth < 768;\n  const spacingX = isMobile ? 160 : 160;\n  const cols = 10;\n  const margin = 200; // same offset you use in initGame\n  const invaderWidth = 40;\n  const totalWidth = margin + cols * spacingX + invaderWidth;\n  const zoom = isMobile ? 0.99 : 0.95;\n  return {\n    isMobile,\n    width: isMobile ? (window.innerWidth + 500) : Math.max(window.innerWidth, totalWidth),\n    height: isMobile ? 500 : 800,\n    playerY: isMobile ? 1000 : 800,\n    zoom,\n    totalWidth,\n\n    invaderSpacingX: spacingX,\n    invaderSpacingY: isMobile ? 80 : 140,\n  };\n};\n\nconst dimensions = getGameDimensions();\nconst { width, height, playerY, zoom, totalWidth, invaderSpacingX, invaderSpacingY } = dimensions;\nconst WIDTH = width;\nconst HEIGHT = height;\nconst PLAYER_Y = playerY;\nconst INV_COLS = window.innerWidth < 768 ? 4 : 10; // Less columns on mobile\nconst INV_ROWS = window.innerWidth < 768 ? 5 : 3; // More rows on mobile\nconst INV_SPACING_X = invaderSpacingX;\nconst INV_SPACING_Y = invaderSpacingY;\nconst TICK_MS = window.innerWidth < 768 ? 120 : 120; // Slower on mobile\nconst BULLET_STEP = 20;\nconst INV_STEP = window.innerWidth < 768 ? 10 : 10; // Slower invader movement on mobile\nconst INV_DROP = window.innerWidth < 768 ? 10 : 20; // Slower drop on mobile\n\n/* ---------------------------------------------------------------------- */\nexport default function SpaceInvaders() {\n  const [nodes, setNodes] = useNodesState([]);\n  const [invaders, setInvaders] = useState([]);\n  const [bullets, setBullets] = useState([]);\n  const [playerX, setPlayerX] = useState(WIDTH / 2 - 20);\n  const [dir, setDir] = useState(1);\n  const [active, setActive] = useState(false);\n  const [score, setScore] = useState(0);\n  const scoreRef = useRef(0);\n  const bulletsRef = useRef([]);\n  const invadersRef = useRef([]);\n  const dirRef = useRef(1);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameWon, setGameWon] = useState(false);\n  const [finalScore, setFinalScore] = useState(1000); // Set an initial score to display\n  const [forceUpdate, setForceUpdate] = useState(0); // Add this for forcing re-render\n\n  // Add immediate console log when component mounts\n  useEffect(() => {\n    console.log('%c SpaceInvaders Component Mounted', 'background: purple; color: white; font-size: 20px');\n    \n    // Create a more visible debug panel\n    const debugDiv = document.createElement('div');\n    debugDiv.style.position = 'fixed';\n    debugDiv.style.top = '10px';\n    debugDiv.style.right = '10px';\n    debugDiv.style.background = 'rgba(0, 0, 0, 0.9)';\n    debugDiv.style.color = 'lime';\n    debugDiv.style.padding = '15px';\n    debugDiv.style.zIndex = '99999';\n    debugDiv.style.fontSize = '14px';\n    debugDiv.style.fontFamily = 'monospace';\n    debugDiv.style.border = '2px solid lime';\n    debugDiv.style.borderRadius = '5px';\n    debugDiv.style.minWidth = '300px';\n    debugDiv.style.maxHeight = '200px';\n    debugDiv.style.overflow = 'auto';\n    debugDiv.id = 'debug-output';\n    debugDiv.innerHTML = 'Debug Panel Initialized<br/>';\n    document.body.appendChild(debugDiv);\n    \n    // Keep original console.log working AND add to debug panel\n    const originalLog = console.log;\n    console.log = (...args) => {\n      originalLog.apply(console, args);\n      const message = args.join(' ');\n      debugDiv.innerHTML += message + '<br/>';\n      debugDiv.scrollTop = debugDiv.scrollHeight;\n    };\n\n    // Log current game state\n    console.log(`Initial gameOver: ${gameOver}, gameWon: ${gameWon}, finalScore: ${finalScore}`);\n\n    return () => {\n      console.log = originalLog;\n      debugDiv?.remove();\n    };\n  }, [gameOver, gameWon, finalScore]);\n\n  // Force a component re-render\n  const forceRender = useCallback(() => {\n    setForceUpdate((prev) => prev + 1);\n    console.log(\"Forcing re-render\");\n  }, []);\n\n  const lastShotRef = useRef(0);\n  const SHOOT_COOLDOWN = window.innerWidth < 768 ? 200 : 100; // still throttle to avoid audio spam\n\n  /* ------------------------------ shooting ------------------------------ */\n  const playSound = useCallback((soundName) => {\n    const sound = soundsRef.current[soundName];\n    if (sound) {\n      sound.currentTime = 0;\n      sound.play().catch((e) => console.log(\"Sound play error:\", e));\n    }\n  }, []);\n\n  const handleShoot = useCallback(() => {\n    if (!active) return;\n    const now = Date.now();\n    if (now - lastShotRef.current < SHOOT_COOLDOWN) return;\n    lastShotRef.current = now;\n    setBullets((bs) => [\n      ...bs,\n      {\n        id: `b-${now}`,\n        position: { x: playerX + 14, y: PLAYER_Y - 24 },\n        draggable: false,\n        data: { label: \"🔺\" },\n        style: {\n          background: \"#facc15\",\n          width: 12,\n          height: 20,\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          fontSize: 12,\n          border: \"none\",\n        },\n      },\n    ]);\n    playSound(\"shoot\");\n  }, [active, playerX, playSound, SHOOT_COOLDOWN]);\n\n  /* ------------------------------ sounds ------------------------------ */\n  const soundsRef = useRef({});\n  useEffect(() => {\n    Object.entries(SOUNDS).forEach(([key, url]) => {\n      soundsRef.current[key] = loadSound(url);\n    });\n  }, []);\n\n  /* -------------------------------- helpers ---------------------------- */\n  const makePlayer = useCallback(\n    (x) => ({\n      id: \"player\",\n      position: { x, y: PLAYER_Y },\n      draggable: false,\n      data: { label: \"🚀\" },\n      style: {\n        background: \"#0369a1\",\n        width: 40,\n        height: 40,\n        borderRadius: \"50%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 22,\n        color: \"white\",\n        border: \"none\",\n      },\n    }),\n    []\n  );\n\n  /* --------------------------------- init ----------------------------- */\n  const initGame = () => {\n    console.log(\"=== INIT GAME CALLED ===\");\n    \n    const inv = [];\n    let id = 0;\n    for (let r = 0; r < INV_ROWS; r++) {\n      for (let c = 0; c < INV_COLS; c++) {\n        inv.push({\n          id: `inv-${id++}`,\n          position: { x: 200 + c * INV_SPACING_X, y: 150 + r * INV_SPACING_Y },\n          draggable: false,\n          data: { label: \"👾\" },\n          style: {\n            background: \"#b91c1c\",\n            width: 40,\n            height: 40,\n            borderRadius: 8,\n            fontSize: 20,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            color: \"white\",\n            border: \"none\",\n          },\n        });\n      }\n    }\n    \n    console.log(\"Setting game state...\");\n    setInvaders(inv);\n    setBullets([]);\n    setPlayerX(WIDTH / 2 - 20);\n    setDir(1);\n    setScore(0);\n    setActive(true);\n    setGameOver(false);\n    setGameWon(false);\n    setFinalScore(0);\n    \n    console.log(\"Game initialized successfully!\");\n    console.log(`New state will be: gameOver=false, gameWon=false, active=true`);\n    \n    // Reset any debug flags\n    window.gameDebug = true;\n    playSound(\"gameStart\");\n  };\n\n  /* ------------------------------ controls ----------------------------- */\n  useEffect(() => {\n    if (!active) return;\n\n    const onKey = (e) => {\n      if (e.key === \"ArrowLeft\") setPlayerX((x) => Math.max(10, x - 20));\n      else if (e.key === \"ArrowRight\") setPlayerX((x) => Math.min(WIDTH - 50, x + 20));\n      else if (e.key === \" \" || e.key === \"ArrowUp\") {\n        e.preventDefault();\n        handleShoot();\n      }\n    };\n    window.addEventListener(\"keydown\", onKey);\n    return () => window.removeEventListener(\"keydown\", onKey);\n  }, [active, handleShoot]);\n\n  /* ------------------------------ keep refs in sync --------------------------- */\n  useEffect(() => {\n    scoreRef.current = score;\n  }, [score]);\n\n  useEffect(() => {\n    bulletsRef.current = bullets;\n  }, [bullets]);\n\n  useEffect(() => {\n    invadersRef.current = invaders;\n  }, [invaders]);\n\n  useEffect(() => {\n    dirRef.current = dir;\n  }, [dir]);\n\n  /* ------------------------------ game loop --------------------------- */\n  useEffect(() => {\n    console.log(\"Game loop useEffect initiated\");\n    if (!active) return;\n\n    const loop = setInterval(() => {\n      console.log(\"Game loop tick\"); // Added log\n\n      // Get current values from refs to avoid stale closures\n      const currentBullets = bulletsRef.current;\n      const currentInvaders = invadersRef.current;\n      const currentDir = dirRef.current;\n\n      /* Move bullets */\n      const movedBullets = currentBullets\n        .map((b) => ({ ...b, position: { x: b.position.x, y: b.position.y - BULLET_STEP } }))\n        .filter((b) => b.position.y > -30);\n\n      /* Move invaders */\n      const edgeHit = currentInvaders.some(\n        (n) => n.position.x + currentDir * INV_STEP < 10 || n.position.x + currentDir * INV_STEP > WIDTH - 50\n      );\n      const newDir = edgeHit ? currentDir * -1 : currentDir;\n      const movedInvaders = currentInvaders.map((n) => ({\n        ...n,\n        position: {\n          x: n.position.x + newDir * INV_STEP,\n          y: n.position.y + (edgeHit ? INV_DROP : 0),\n        },\n      }));\n\n      /* Collision detection */\n      const remainingInvaders = [];\n      let hitCount = 0;\n      movedInvaders.forEach((inv) => {\n        const hit = movedBullets.some((b) => {\n          const withinX = b.position.x >= inv.position.x && b.position.x <= inv.position.x + 40;\n          const withinY = b.position.y >= inv.position.y && b.position.y <= inv.position.y + 40;\n          return withinX && withinY;\n        });\n        if (!hit) remainingInvaders.push(inv);\n        else hitCount += 1;\n      });\n\n      if (hitCount) {\n        setScore((s) => {\n          const newScore = s + hitCount * 100;\n          scoreRef.current = newScore; // Update ref immediately\n          return newScore;\n        });\n        playSound(\"explosion\");\n      }\n\n      /* Remove bullets that hit */\n      const survivingBullets = movedBullets.filter((b) => {\n        return !remainingInvaders.some((inv) => {\n          const withinX = b.position.x >= inv.position.x && b.position.x <= inv.position.x + 40;\n          const withinY = b.position.y >= inv.position.y && b.position.y <= inv.position.y + 40;\n          return withinX && withinY;\n        });\n      });\n\n      // Update state\n      setBullets(survivingBullets);\n      setInvaders(remainingInvaders);\n      setDir(newDir);\n\n      console.log(\"Remaining invaders count:\", remainingInvaders.length);\n\n      /* Win / lose checks */\n      if (remainingInvaders.some((n) => n.position.y >= PLAYER_Y - 20)) {\n        // Game over sequence\n        const final = scoreRef.current;\n        console.log(\"%c Game Over! Final score: \" + final, \"background: red; color: white; font-size: 20px\");\n        setActive(false);\n        setGameOver(true);\n        setFinalScore(final);\n        \n        // Make sure we see the modal by forcing a focus\n        setTimeout(() => {\n          console.log(\"%c Showing Game Over modal with score: \" + final, \"background: blue; color: white\");\n          document.body.style.overflow = \"hidden\"; // Prevent scrolling behind modal\n          \n          // Force re-render\n          forceRender();\n        }, 100);\n        \n        playSound(\"gameOver\");\n      }\n      if (remainingInvaders.length === 0) {\n        // Game won sequence\n        console.log(\"Help me please!!!!!!!\");  // Debug log added here\n        const final = scoreRef.current;\n        console.log(\"%c Game Won! Final score: \" + final, \"background: green; color: white; font-size: 20px\");\n        setActive(false);\n        setGameWon(true);\n        setFinalScore(final);\n        \n        // Make sure we see the modal by forcing a focus\n        setTimeout(() => {\n          console.log(\"%c Showing Game Won modal with score: \" + final, \"background: blue; color: white\");\n          document.body.style.overflow = \"hidden\"; // Prevent scrolling behind modal\n          // Force re-render\n          forceRender();\n        }, 100);\n        \n        playSound(\"gameWin\");\n      }\n    }, TICK_MS);\n\n    return () => clearInterval(loop);\n  }, [active, playSound, forceRender, invaders]); // Added invaders to dependency array\n\n  const playerNode = useMemo(() => makePlayer(playerX), [makePlayer, playerX]);\n\n  useEffect(() => {\n    setNodes([playerNode, ...invaders, ...bullets]);\n  }, [playerNode, invaders, bullets, setNodes]);\n\n  /* ------------------------------- render ----------------------------- */\n  return (\n    <>\n      <div style={{ \n        height: \"100vh\", \n        width: \"100%\", \n        display: \"flex\", \n        flexDirection: \"column\", \n        color: \"white\", \n        overflow: \"visible\",  // Allow modal to overflow\n        backgroundColor: \"#000000\"\n      }}>\n        <motion.div\n          initial={{ y: -50, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          style={{\n            textAlign: \"center\",\n            backgroundColor: \"#0f172a\",\n            padding: \"12px 0\",\n            borderBottom: \"2px solid #38bdf8\",\n            boxShadow: \"0 4px 12px rgba(56, 189, 248, 0.4)\",\n            fontFamily: \"'Press Start 2P', monospace, system-ui\"\n          }}\n        >\n          <h1 style={{\n            margin: 0,\n            fontSize: window.innerWidth < 768 ? \"24px\" : \"32px\",\n            background: \"linear-gradient(to right, #38bdf8, #818cf8)\",\n            WebkitBackgroundClip: \"text\",\n            WebkitTextFillColor: \"transparent\",\n            fontWeight: \"bold\",\n            textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\",\n            letterSpacing: \"2px\"\n          }}>\n            SPACE INVADERS\n          </h1>\n        </motion.div>\n        <motion.div\n          initial={{ y: -50, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          style={{\n            padding: \"16px\",\n            display: \"flex\",\n            gap: \"16px\",\n            alignItems: \"center\",\n            backgroundColor: \"#000000\",\n            boxShadow: \"0 4px 6px -1px rgba(0, 0, 0, 0.1)\",\n            zIndex: 10,\n            borderBottom: \"1px solid rgb(51, 51, 51)\"\n          }}\n        >\n          <Button type=\"button\" onClick={(e) => { e.preventDefault(); initGame(); }}>\n            {active ? \"Restart\" : \"Start\"}\n          </Button>\n          \n          <span style={{ marginLeft: \"auto\", fontSize: \"14px\", fontWeight: \"600\", color: \"green\" }}>Score: {score}</span>\n        </motion.div>\n\n        <div style={{ flex: 1, position: \"relative\", width: \"100%\", backgroundColor: \"#000000\" }}>\n          \n          <div style={{ width: \"100vw\", height: \"80vh\", background: \"#000000\" }}>\n            \n            <ReactFlow\n              nodes={nodes}\n              edges={[]}\n              panOnDrag={false}\n              zoomOnScroll={false}\n              panOnScroll={false}\n              minZoom={window.innerWidth < 768 ? 0.4 : 0.2}\n              maxZoom={1}\n              defaultViewport={{\n                x: 0,\n                y: 0,\n                zoom: Math.min(window.innerWidth / totalWidth, zoom),\n              }}\n            >\n              <Background gap={40} size={1.5} color=\"#333333\" variant=\"lines\" style={{ opacity: 0.4 }} />\n            </ReactFlow>\n          </div>\n        </div>\n\n        {active && window.innerWidth < 768 && (\n          <div style={{\n            height: \"128px\", \n            backgroundColor: \"#000000\", \n            display: \"flex\", \n            justifyContent: \"center\", \n            alignItems: \"center\",\n            borderTop: \"1px solid rgb(51, 51, 51)\"\n          }}>\n            <div style={{\n              display: \"flex\", \n              justifyContent: \"space-between\", \n              alignItems: \"center\",\n              width: \"100%\",\n              maxWidth: \"340px\"\n            }}>\n              <button\n                onTouchStart={() => setPlayerX((x) => Math.max(10, x - 20))}\n                onTouchEnd={(e) => e.preventDefault()}\n                style={{ \n                  width: \"64px\", \n                  height: \"64px\", \n                  borderRadius: \"50%\", \n                  backgroundColor: \"rgba(59, 130, 246, 0.5)\", \n                  display: \"flex\", \n                  justifyContent: \"center\", \n                  alignItems: \"center\", \n                  color: \"white\", \n                  fontSize: \"28px\", \n                  border: \"none\",\n                  padding: 0,\n                  touchAction: \"manipulation\"\n                }}\n              >\n                ←\n              </button>\n              <button\n                onPointerDown={handleShoot}\n                onTouchStart={handleShoot}\n                style={{ \n                  width: \"64px\", \n                  height: \"64px\", \n                  borderRadius: \"50%\", \n                  backgroundColor: \"rgba(59, 130, 246, 0.5)\", \n                  display: \"flex\", \n                  justifyContent: \"center\", \n                  alignItems: \"center\", \n                  color: \"white\", \n                  fontSize: \"28px\", \n                  border: \"none\",\n                  padding: 0,\n                  touchAction: \"manipulation\"\n                }}\n              >\n                🔥\n              </button>\n              <button\n                onTouchStart={() => setPlayerX((x) => Math.min(WIDTH - 50, x + 20))}\n                onTouchEnd={(e) => e.preventDefault()}\n                style={{ \n                  width: \"64px\", \n                  height: \"64px\", \n                  borderRadius: \"50%\", \n                  backgroundColor: \"rgba(59, 130, 246, 0.5)\", \n                  display: \"flex\", \n                  justifyContent: \"center\", \n                  alignItems: \"center\", \n                  color: \"white\", \n                  fontSize: \"28px\", \n                  border: \"none\",\n                  padding: 0,\n                  touchAction: \"manipulation\"\n                }}\n              >\n                →\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {(gameOver || gameWon) && (\n        <GameOverModal\n          score={finalScore}\n          isWin={gameWon}\n          onRestart={() => {\n            // Reset body overflow and remove debug element when restarting\n            document.body.style.overflow = \"auto\";\n            \n            initGame();\n          }}\n          onClose={() => {\n            // Reset body overflow and remove debug element when closing\n            document.body.style.overflow = \"auto\";\n\n            setActive(false); // Ensure game is not active\n            setGameOver(false);\n            setGameWon(false);\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.jsx'\n\n// Add immediate logging\nconsole.warn('Main.jsx is executing');\nwindow.addEventListener('DOMContentLoaded', () => {\n    console.error('DOM Content Loaded');\n});\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["useState","useEffect","jsxs","jsx","index","totalWidth","zoom","useRef","gameOver","useCallback","useMemo","Fragment","ReactFlow","createRoot","StrictMode","App"],"mappings":"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"}